{
  "meta": {
    "name": "ConvDNNTest",
    "generate_computational_graph": true,
    "mean_image": "maybe just the name could be sufficient because I will keep it in the lmdb folder???",
    "batchsize": 250,
    "val_batchsize": 40,
    "epoch": 200,
    "jobs": 48
  },
  "data": {
    "data_var_1": {
      "name": "Visual",
      "shape": [
        256,
        256,
        3
      ],
      "dtype": "uint8",
      "container": "lmdb",
      "data_path": "path/to/container/or/json/dict"
    },
    "data_var_2": {
      "name": "Textual",
      "shape": [
        300
      ],
      "dtype": "float32",
      "container": "lmdb",
      "data_path": "path/to/container/or/json/dict"
    },
    "data_var_3": {
      "name": "Class Labels",
      "shape": [
        1645458
      ],
      "dtype": "float32",
      "container": "lmdb",
      "data_path": "path/to/container/or/json/dict"
    }
  },
  "network": {

    "__input__": [
      "mnist_input"
    ],

    "__output__": [
      "l3"
    ],

    "__states__": {
      "train": false
    },

    "__layers__": {
      "l1": {
        "type": "L.Linear",
        "is_variable": false,
        "input": {
          "x": "mnist_input"
        },
        "params": {
          "in_size": 784,
          "out_size": 1000
        }
      },
      "relu1": {
        "type": "F.relu",
        "is_variable": false,
        "input": {
          "x": "l1"
        },
        "params": {
        }
      },
      "l2": {
        "type": "L.Linear",
        "is_variable": false,
        "input": {
          "x": "relu1"
        },
        "params": {
          "in_size": 1000,
          "out_size": 1000
        }
      },
      "relu2": {
        "type": "F.relu",
        "is_variable": false,
        "input": {
          "x": "l2"
        },
        "params": {
        }
      },
      "l3": {
        "type": "L.Linear",
        "is_variable": false,
        "input": {
          "x": "relu2"
        },
        "params": {
          "in_size": 1000,
          "out_size": 10
        }
      }
    }
  },
  "loss": {
    "__loss__": [
      [
        "class_loss",
        1.0
      ]
    ],
    "class_loss": {
      "type": "F.softmax_cross_entropy",
      "input": {
        "x": "l3",
        "t": "mnist_label"
      },
      "params": {}
    },
    "accuracy": {
      "type": "F.evaluation.accuracy.accuracy",
      "input": {
        "y": "l3",
        "t": "mnist_label"
      }
    }
  },
  "optimizer": {
    "type": "MomentumSGD",
    "params": {
      "lr": 0.01,
      "momentum": 0.9
    }
  }
}